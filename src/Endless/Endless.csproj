<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net47;net40;netstandard2.0;netstandard1.1;</TargetFrameworks>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <Version>0.0.1</Version>
    <AssemblyVersion>0.0.0.1</AssemblyVersion>
    <FileVersion>0.0.0.1</FileVersion>
    <Authors>Tomáš Pažourek</Authors>
    <Company>Tomáš Pažourek</Company>
    <Product />
    <Copyright>Tomáš Pažourek</Copyright>
    <PackageLicenseUrl>https://raw.githubusercontent.com/tompazourek/Endless/master/LICENSE</PackageLicenseUrl>
    <PackageProjectUrl>https://github.com/tompazourek/Endless</PackageProjectUrl>
    <RepositoryUrl>https://github.com/tompazourek/Endless</RepositoryUrl>
    <PackageIconUrl>https://raw.githubusercontent.com/tompazourek/Endless/master/assets/logo_64.png</PackageIconUrl>
    <PackageTags>c-sharp collections enumerable enumerator extensions functional generate ienumerable ienumerable-extension infinite infinite-sequences iterate lazy lazy-evaluation random reduce sequences stream</PackageTags>
    <Description>Extensions that support the C# functional paradigm, focusing mainly on infinite enumerables.</Description>
    <RepositoryType>git</RepositoryType>
    <PackageReleaseNotes>https://github.com/tompazourek/Endless/releases</PackageReleaseNotes>
    <PackageId>Endless</PackageId>
  </PropertyGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'net47' ">
    <Reference Include="Microsoft.CSharp" />
  </ItemGroup>
  
  <ItemGroup Condition=" '$(TargetFramework)' == 'net40' ">
    <Reference Include="Microsoft.CSharp" />
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'netstandard2.0' ">
    <PackageReference Include="Microsoft.CSharp" Version="4.0.1" />
  </ItemGroup>
  
  <ItemGroup Condition=" '$(TargetFramework)' == 'netstandard1.1' ">
    <PackageReference Include="Microsoft.CSharp" Version="4.0.1" />
  </ItemGroup>

</Project>
